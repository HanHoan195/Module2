13/03
// Scanner dùng để nhập thông tin
public static Scanner scanner = new Scanner(System.in);

// In có xuống dòng
System.out.println();

// Lớp Arrays có phương thức toString dùng để chuyển 1 mảng thành chuỗi
Arrays.toString(a)

// In có format
System.out.printf("%s xin chao", "C1222I1");

//Sao chép 1 mảng gốc thành 1 mảng mới theo 1 độ dài cho trước
Arrays.copyOf(a, a.length + 1);



14/03
Đọc thêm và notes:
Print format trong java
https://niithanoi.edu.vn/printf-trong-java.html

Note:
-%c: ký tự
-%i: số nguyên
-%d và %u: số thập phân
-%s: chuỗi
-%t: định dạng ngày giờ
-%% và \%: dấu %

Xem trước: OOP
https://www.youtube.com/watch?v=tcGNKqhu3GE
+ Từ khóa class: - Là từ khóa dùng để khai báo lớp.
                VD: khai báo lớp Car:    class Car{}
                -Tên lớp là 1 danh từ, theo quy tắc Camel, không trùng vs các từ khóa trong java, không bắt đầu bằng số, có thể bắt đầu bằng $ hoặc _.
                
+ Từ khóa new: - Dùng để khởi tạo đối tượng.
                VD: Car audi = new Car();
                    Hoặc tách rời việc khai báo biến và khởi tạo đối tượng:
                    Car audi;
                    audi = new Car();

+ Thuộc tính: -Mô tả các đặc điểm của đối tượng (instance variable )
              -Cú pháp: accessmodifier datatype propertyname.
              VD: public String color;
                  public double price;
                  
+Phương thức:- Mô tả các hành vi mà đối tượng có thể thực hiện (instance method)
              public int speed(){}


+ Cách truy xuất các thuộc tính: Sử dụng dấu ( . ) để truy suât đến thuộc tính của đối tượng
                                  VD:Class Car audi = new Car("Back", 4000);
                                      System.out.println("Color is: " + audi.color);
                                      System.out.println("Price is: " + audi.price);

+ Cách gọi phương thức: Sử dụng dấu ( . ) để gọi phương thức
                         VD: int maxSpeed = audi.speed();
                        
+ Getter:là phương thức cho phép lấy về giá trị của thuộc tính
          -Cú pháp khai báo getter:
              public returnType getPropetyName()
          -Đối vs thuộc tính kiểu boolean thì tên getter bắt đầu bằng chữ "is": 
              public boolean isPropertyName()
          

+Setter:là phương thức cho phép thay đổi giá trị của thuộc tính
        -Cú pháp khai báo setter:
            public void setPropertyName(dataType propertyValue)
            
            VD: setter và getter:
            class Person{
                    private Stringname;
                    public void setName(String name){
                    this.name = name;
                    }
                    public String getName(){
                    return this.name;
                    }
                    }
                    /*****************************************************************************/
                    
     14/3               
                    

